<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
	#>
	<#
	} else if(IsLayoutPageSelected) {
	#>
	@{
		ViewBag.Title = "<#= ViewName#>";
	<#
	if (!String.IsNullOrEmpty(LayoutPageFile)) {
	#>
		Layout = "<#= LayoutPageFile#>";
<#
}
#>
	}
	<div class="row wrapper border-bottom white-bg page-heading">
		<div class="col-sm-4">
			<ol class="breadcrumb">
				<li class="active">
					<strong><#= ViewDataTypeShortName #></strong>
				</li>
			</ol>
		</div>
	</div>
	<#
	} else {
	#>
	@{
		Layout = null;
	}
	<!DOCTYPE html>
	<html>
	<head>
		<meta name="viewport" content="width=device-width" />
		<title><#= ViewName #></title>
	</head>
	<body>
	<#
		PushIndent("    ");
	}
	#>
	<div class="wrapper wrapper-content animated fadeInRight">
		<div class="row">
			<div class="col-lg-12">
				<div class="ibox float-e-margins">
					<div class="ibox-title">
						<input type="button" class="btn btn-primary btn-xs pull-left" id="btnActualizar" value="Actualizar" />
                        <input type="button" class="btn btn-primary btn-xs pull-right" data-toggle="modal" data-target="#modalNuevo" value="Nuevo" />
					</div>
					<div class="ibox-content">
						<table id="tabla" class="table table-striped">	
						<thead>
							<tr>
						<#
						IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
						foreach (PropertyMetadata property in properties) {
						#>
					<th>
									@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
								</th>
								<#
								}
								#>
								<th>Acciones</th>			
							</tr>		
						</thead>
						<tbody></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	 </div>	 
@section Styles{
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Content/tabla")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/general/Modals")
    @Scripts.Render("~/general/Simple")
    @Scripts.Render("~/view/Persona")
}
@*
	//aqui definimos que datos vamos a ocupar para capturar del edit o el crear
	var DatosPrincipales =
	{
		//aqui las propiedades requeridas en la captura
	};

	//en la primera variable declaramos la ruta del controlador
	//--'/"Controlador"'
	var DireccionURL = '/Persona',
		PropiedadesModal = {},
		Propiedadestabla = {},
	//aqui declaramos que modals vamos a necesitar y cual es el titulo que llevará
	//"Agregar": "Nuevo",
	//"Actualizar": "Modificar",
	//"Detalles": "Detalles",
	//"¿Seguro que desea inactivar?": "Eliminar"
		modales = {
			"Agregar": "Nuevo",
			"Actualizar": "Modificar",
			"Detalles": "Detalles",
			"¿Seguro que desea inactivar?": "Eliminar"
		},
		PropiedadesNuevoModal = {},
	//aqui declaranos los tipos de controles que podemos utilizar en los modals
		TipoDeControles = {
			"input": {
				"aniadir": function (Id) {
					return '<input type="text" class="form-control" id="txt' + Id + '" value="" />';
				},
				"llenar": function (modal, value, dato) {
					var input = $('#txt' + modal + value).val(dato);
				},
				"obtener": function (modal, value) {
					var object = $("#txt" + modal + value);
					return $("#txt" + modal + value).val();
				}
			},
			"select": {
				"aniadir": function (Id) {
					return '<select class="form-control m-b" id="ddl' + Id + '"></select>'
				},
				"llenar": function (modal, value, dato) {
					if (dato == '') {
						dato = '0';
					}
					$("#ddl" + modal + value)[0].value = "0";
					$("#ddl" + modal + value + " option:selected").removeAttr("selected");
					$('#ddl' + modal + value + ' option[value=' + dato + ']').attr("selected", true);
				},
				"obtener": function (modal, value) {
					var object = $("#ddl" + modal + value);
					return $("#ddl" + modal + value).val();
				}
			},
		};
	//aqui  especificamos que datos llevará nuestro 
	//--JSON(Datos) que recuperará del controlador atravez de AJAX
	//--la elementos de los modales "editar"y "Detalles"(PropiedadesModal)
	//--la elementos del modal "Nuevo"(PropiedadesNuevoModal)
	//--los datos que llevará la tabla
	function EstructuraDatos() {
		Datos = { BusinessEntityID: "", Empleado: "", Persona: "" };
		PropiedadesModal = {
			PersonType: "input",
			FirstName: "input",
			MiddleName: "input",
			LastName: "input",
			EmailPromotion: "select"//,
			//NationalIDNumber: ""
		};
		PropiedadesNuevoModal = {
			PersonType: "",
			FirstName: "",
			MiddleName: "",
			LastName: "",
			EmailPromotion: "",
			NationalIDNumber: ""
		};
	}
	//en esta areá definimos que datos llevará la tabla
	//--IsNull() es una funcion que puede llamar para verificar que que esta 
	//      definido el campo... si no lo esta, devolvera ""
	//--Para agregar una celda debe usar el objeto "Columnas" 
	//  ejemplo:
	//  Columnas."columna de la tabla"=IsNull(obj."tabla que creo en formato JSON"."Campo de la tabla")
	//  Columnas["columna de la tabla"]=IsNull(obj["tabla que creo en formato JSON"]["Campo de la tabla"])
	function addRow(i, obj) {
		Columnas.FirstName = IsNull(obj.Persona.FirstName);
		Columnas.MiddleName = IsNull(obj.Persona.MiddleName);
		Columnas.LastName = IsNull(obj.Persona.LastName);
		Columnas.EmailPromotion = IsNull(obj.Persona.EmailPromotion);
		Columnas.Acciones = '<div data-indice="' + i + '" class="btn-group encabezado">' +
							'<button name="' + i + '" class="btn btn-primary btn-xs margin Details " type="button" data-toggle="modal" data-target="#modalDetalles"><span class="bold">Detalles</span></button>' +
							'<button name="' + i + '" class="btn btn-white btn-xs margin editar" type="button" data-toggle="modal" data-target="#modalModificar"><span class="bold">Editar</span></button>' +
					  '</div>';
	}
	//ObtenerDatos('/aqui va el nombre del modal('Nuevo','modificar')/', aqui va el objeto que van a llenar);
	$(document).ready(function () {
		cargarObjetos();
		prepararTabla();
		llenarTable('llenartabla');
		CargarDDl('EmaiPromotion/id=' + 6, ['ddlNuevoEmailPromotion', 'ddlModificarEmailPromotion'])
		$("#btnDetalles").click(function () {
			EstructuraDatos();
			var indice = this.dataset.fila;
			var propiedades = Object.keys(PropiedadesModal);
			$.each(propiedades, function (index, value) {
				var dato = IssNull(datos[indice].Persona[value]);
				var input = $("#modalModificar").find(".content").find('#txt' + value)[0];
				input.value = dato;
			});
		});
		$("#btnNuevo").click(function () {
			ObtenerDatos('Nuevo', persona);
			console.log(persona);
		});
		$("#btnModificar").click(function () {
			ObtenerDatos('Modificar', persona);
			console.log(persona);
		});
		$("#btnEliminar").click(function () {
		});
		$("#btnActualizar").click(function () {
			llenarTable('llenartabla');
		});
	});
*@
	<#
	// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
	#>
	<#
	if(!IsPartialView && !IsLayoutPageSelected) {
		ClearIndent();
	#>
	</body>
	</html>
	<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>